openapi: 3.0.0
info:
  title: Create Team API
  description: Creates a new team with the authenticated user as owner
  version: 1.0.0
servers:
- url: https://console.vast.ai
  description: Production server
paths:
  /api/v0/team/:
    post:
      summary: create team
      description: |
        Creates a new team account, separate from the user's personal account.
        The authenticated user becomes the owner of the new team and is added as a member.
        Default team roles (owner, manager) are created for the team.
        Optionally, the user can transfer credits to the new team during creation.

        **Operation details:**
        1. Creates a new team account and assigns the authenticated user as the owner.
        2. Initializes default team roles for the team.
        3. Updates the user's API key/session to grant owner rights for the new team.
        4. Adds the user as a member of the team.

        **CLI Usage:**  
        `vastai create team --name <team_name> -permissions <permissions_json>`
      security:
      - BearerAuth: []
      tags:
      - Team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - team_name
              - permissions
              properties:
                team_name:
                  type: string
                  description: Name for the new team
                  example: my-awesome-team
                permissions:
                  type: object
                  description: |
                    JSON object containing role and permission definitions.
                    [See roles and permissions documentation](https://vast.ai/docs/cli/roles-and-permissions)
                  example:
                    api:
                      misc: {}
                      user_read: {}
                      instance_read: {}
                      instance_write: {}
                      billing_read: {}
                      billing_write: {}
      responses:
        '200':
          description: Team Successfully Created!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: Team Successfully Created!
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  msg:
                    type: string
                    example: Team name already exists
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                error: auth_error
                msg: Invalid user key
        # '403':
        #   description: Forbidden - User is blacklisted
        #   content:
        #     application/json:
        #       schema:
        #         $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: API key must be provided in the Authorization header
  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
        msg:
          type: string
