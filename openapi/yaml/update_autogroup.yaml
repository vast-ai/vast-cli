openapi: 3.0.0
info:
  title: Update Autogroup API
  description: API endpoint to update an existing autoscale group
  version: 1.0.0
servers:
- url: https://console.vast.ai
  description: Production server
paths:
  /api/v0/autojobs/{id}/:
    put:
      summary: update autogroup
      description: 'Updates the properties of an existing autoscale group based on
        the provided parameters.


        CLI Usage: vastai update autogroup <ID> [OPTIONS]

        '
      security:
      - BearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        description: The ID of the autogroup to update.
        schema:
          type: integer
          example: 4242
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                min_load:
                  type: number
                  description: Minimum load for the autogroup.
                  example: 1.0
                target_util:
                  type: number
                  description: Target utilization for the autogroup.
                  example: 0.9
                cold_mult:
                  type: number
                  description: Cold multiplier for the autogroup.
                  example: 3.0
                test_workers:
                  type: integer
                  description: Number of test workers for performance estimation.
                  default: 3
                  example: 3
                template_hash:
                  type: string
                  description: Template hash for the autogroup.
                  example: abc123def456
                template_id:
                  type: integer
                  description: Template ID for the autogroup.
                  example: 456
                search_params:
                  type: string
                  description: Search parameters for offers (JSON object or query string).
                  default: '{"verified": {"eq": true}, "rentable": {"eq": true}, "rented": {"eq": false}}'
                  example: gpu_name=RTX_3090 rentable=true
                launch_args:
                  type: string
                  description: Launch arguments for creating instances.
                  example: "--env VAR=value"
                gpu_ram:
                  type: number
                  description: Estimated GPU RAM requirement.
                  example: 24
                endpoint_name:
                  type: string
                  description: Deployment endpoint name.
                  example: my_endpoint
                endpoint_id:
                  type: integer
                  description: Deployment endpoint ID.
                  example: 123
      responses:
        '200':
          description: Successfully updated the autogroup.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: invalid_args
                  msg:
                    type: string
                    example: Workgroup not found for user
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                  msg:
                    type: string
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: API requests too frequent endpoint threshold=2.0
      tags:
      - Serverless
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: API key must be provided in the Authorization header
x-rate-limit:
  threshold: 2.0
  per: request
  description: Maximum request frequency per IP address for this endpoint
x-cli-commands:
- name: update autogroup
  description: Update an autogroup
  endpoint: /api/v0/autojobs/{id}/
  method: PUT
  example: vastai update autogroup 4242 --min_load 1.5 --target_util 0.8